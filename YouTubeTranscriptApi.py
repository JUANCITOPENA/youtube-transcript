# Para instalar las herramientas necesarias: 
# pip install streamlit youtube-transcript-api python-docx

# Importar las bibliotecas necesarias
import streamlit as st
from youtube_transcript_api import YouTubeTranscriptApi  # Para obtener transcripciones de videos de YouTube
from docx import Document  # Para crear y manipular documentos de Word
import io  # Para manejo de flujos de entrada y salida en memoria

# T√≠tulo de la aplicaci√≥n, usando HTML para estilo de encabezado
st.markdown("<h3 style='text-align: center;'>üé• Transcribe el contenido de tu video a Texto en Word ‚≠ê</h3>", unsafe_allow_html=True)

# Banner debajo del t√≠tulo, con una imagen centralizada desde un URL de repositorio
st.markdown(
    "<div style='text-align: center;'><img src='https://raw.githubusercontent.com/JUANCITOPENA/-REMOVER-FONDO-IM-GENES-/refs/heads/main/banner.webp' alt='Banner' style='width: 100%;'></div>", 
    unsafe_allow_html=True
)

# Campo de texto para que el usuario ingrese la URL del video de YouTube
video_url = st.text_input("Ingresa la URL del video de YouTube:")

# Verificar si el bot√≥n "Generar Transcripci√≥n" fue presionado
if st.button("Generar Transcripci√≥n"):
    # Verificar si la URL del video fue ingresada
    if not video_url:
        st.error("Por favor, ingresa una URL de video.")  # Mostrar mensaje de error si el campo est√° vac√≠o
    else:
        try:
            # Extraer el ID del video de YouTube de la URL ingresada
            video_id = video_url.split("v=")[-1]
            # Obtener la transcripci√≥n del video en espa√±ol usando la API de YouTubeTranscriptApi
            transcript = YouTubeTranscriptApi.get_transcript(video_id, languages=['es'])

            # Crear un nuevo documento de Word
            doc = Document()
            doc.add_heading('Transcripci√≥n del Video', level=1)  # A√±adir un encabezado al documento

            # Agregar cada parte de la transcripci√≥n al documento de Word
            for entry in transcript:
                doc.add_paragraph(entry['text'])  # Insertar el texto de cada entrada de la transcripci√≥n como un p√°rrafo

            # Guardar el documento en un objeto BytesIO para ser descargado sin almacenarlo en disco
            output = io.BytesIO()
            doc.save(output)
            output.seek(0)  # Establecer el puntero al inicio del archivo en memoria

            # Crear un bot√≥n de descarga para el documento de Word generado
            st.download_button(
                label="Descargar Transcripci√≥n",
                data=output,
                file_name="transcripcion_video.docx",
                mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            )

            st.success("La transcripci√≥n est√° lista para descargarse.")  # Mensaje de √©xito al generar la transcripci√≥n

        except Exception as e:
            # Capturar y mostrar un error si la transcripci√≥n no pudo generarse
            st.error(f"No se pudo obtener la transcripci√≥n: {e}")
